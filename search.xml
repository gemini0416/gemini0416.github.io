<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Windows环境下搭建Flutter]]></title>
    <url>%2F2019%2F11%2F09%2Fflutter%2F</url>
    <content type="text"><![CDATA[#基于Windows、Android Studio环境搭建FlutterFlutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。Flutter中文网站 #Flutter SDK Git安装，并配置PATH环境；JDK安装，并配置PATH，CLASSPATH，JAVA_HOME环境；SDK Manager安装，并配置ANDROID_HOME环境;Android studio安装。 SDK下载方式： 1、使用git方式下载sdk git clone -b stable https://github.com/flutter/flutter.git 2、直接下载zip https://flutter.dev/docs/development/tools/sdk/releases?tab=windows 配置镜像资源环境： PUB_HOSTED_URL=https://pub.flutter-io.cn FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn PATH=../flutter/bin flutter常用的命令： flutter 列出所有的命令 flutter help 查看具体命令的帮助信息 flutter doctor 查看是否还需要安装其它依赖 flutter doctor -v 查看详细信息 flutter channel 查看 Flutter SDK 所有分支 flutter channel stable 切换分支 flutter upgrade 升级 Flutter SDK（此命令会同时更新 Flutter SDK 和你的 Flutter 项目依赖包） flutter packages get 获取项目所有的依赖包（只更新项目依赖包，不包括 Flutter SDK） flutter packages upgrade 获取项目所有依赖包的最新版本（只更新项目依赖包，不包括 Flutter SDK） flutter analyze 分析项目代码 flutter build apk flutter build ios 运行Studio，打开File -&gt; Setting -&gt; Plugins，搜索Dart和Flutter并安装重启： File -&gt; Setting -&gt;Dart sdk path:设置Dart sdk目录，../flutter/bin/cache/dart-sdk 同理Flutter sdk path：设置Flutter sdk目录，../flutter/ 运行Cmd： 执行flutter doctor 查看是否所有环境已搭建完成 如果以上步骤已全部完成，接下来就可以使用studio新建第一个Flutter项目了。]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>flutter</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo中使用Next主题]]></title>
    <url>%2F2017%2F12%2F29%2FHexo%E4%B8%AD%E4%BD%BF%E7%94%A8Next%E4%B8%BB%E9%A2%98%2F</url>
    <content type="text"><![CDATA[Next主题Next主题是比较简约的，也正是由于它的此特性受到大部分的喜爱，包括我。 Github地址 Next官网 由于使用的是最新的v5.1.2，遇到一些配置上的问题在官网使用手册中未描述，在这里作下记录。 设置菜单以此为例介绍：home: / || home (home对应为menu文件以及语言，/**/对应链接，||后是menu_icon，icon_name是Font Awesome)图标的名字。 设置更新时间主题配置文件_config.yml找到post_meta字段，将updated_at值设置为true。在your-hexo-site–&gt;scaffolds–&gt;post.md文件中配置modified: { { date } }]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows环境下搭建Hexo+Github博客记录]]></title>
    <url>%2F2017%2F12%2F29%2Fwindows%E7%8E%AF%E5%A2%83%E4%B8%8B%E6%90%AD%E5%BB%BAHexo%2Bgithub%2F</url>
    <content type="text"><![CDATA[引很多博客、文章、Hexo官网都已经很详细的讲解了关于hexo的好处，用法。这里，我记录下我在使用过程中所遇到的问题，方便大家的学习。 OK，Start： HexoHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 前期准备需要安装Git、 Node.js。 git base命令（$结尾都是git base）： $ npm install -g hexo-cli 安装完成后验证状态： $ node -v $ npm -v $ hexo -v 建站$ hexo init &lt;folder&gt; $ cd &lt;folder&gt; $ npm install 完成后，该文件夹下的目录结构如下： . ├── _config.yml ├── package.json ├── scaffolds ├── source | ├── _drafts | └── _posts └── themes 这样Hexo的资源就安装好了。然后在本地运行输入以下命令： $hexo s -g 然后就可以在本地浏览器访问 http://localhost:4000 ，查看本地博客了。Ctrl+C可以关闭调试。 同步到GitHub在不购买服务器的前提下，我们的网站需要挂在GitHub Pages上。GitHub Pages是面向用户、组织和项目开放的公共静态页面搭建托管服务，可用于搭建个人博客。 首先需要一个Github账号 进入GitHub Pages GitHub中New repository一个项目，此项目必须以yourname.github.io命名。 然后在项目中进入Setting–&gt;Deploy keys添加本机的ssh。具体生成方法自行百度。 然后在本地博客站点_config.yml中设置： deploy： type: git repository: git@github.com:yourname/yourname.github.io.git branch: master 在terminal终端，将当前目录切换到你的本地博客目录，执行以下命令： npm install hexo-deployer-git --save 然后运行以下命令就可以同步到GitHub： $hexo clean // clean本地项目，防止缓存 $hexo g // 全拼是：hexo generate，可以简写成 hexo g; 根据你编辑的md格式的博客，生成静态网页 $hexo d // 全拼是：hexo deploy，可以简写成 hexo d; 将本地博客发布到github 更新博客到github命令： $hexo d -g]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
